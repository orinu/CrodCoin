{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/orinahum/Dropbox/project/solidity/kickstart/pages/campaigns/show.js\";\nimport React, { useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\n\nconst campaignShow = props => {\n  console.log(props.minimumContribution);\n\n  const renderCards = () => {\n    const {\n      bbalance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      aproversCount\n    } = props;\n    const item = [{\n      header: manager,\n      meta: \"Address of Mannager\",\n      description: \"The mannager created this campaign and can create requests to withdraw money\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\ncampaignShow.getInitialProps = async ctx => {\n  let campaign = Campaign(ctx.query.address);\n  campaign = await campaign.methods.getSummary().call();\n  return {\n    minimumContribution: campaign[0],\n    balance: campaign[1],\n    requestsCount: campaign[2],\n    aproversCount: campaign[3],\n    manager: campaign[4]\n  };\n};\n\nexport default campaignShow;","map":{"version":3,"sources":["/Users/orinahum/Dropbox/project/solidity/kickstart/pages/campaigns/show.js"],"names":["React","useEffect","Layout","Card","Campaign","campaignShow","props","console","log","minimumContribution","renderCards","bbalance","manager","requestsCount","aproversCount","item","header","meta","description","getInitialProps","ctx","campaign","query","address","methods","getSummary","call","balance"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,mBAAlB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAM;AACJC,MAAAA,QADI;AAEJC,MAAAA,OAFI;AAGJH,MAAAA,mBAHI;AAIJI,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMFR,KANJ;AAQA,UAAMS,IAAI,GAAG,CACX;AACEC,MAAAA,MAAM,EAAEJ,OADV;AAEEK,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KADW,CAAb;AASA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAnBD;;AAqBA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;AA+BAV,YAAY,CAACc,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC5C,MAAIC,QAAQ,GAAGjB,QAAQ,CAACgB,GAAG,CAACE,KAAJ,CAAUC,OAAX,CAAvB;AACAF,EAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAjB;AACA,SAAO;AACLjB,IAAAA,mBAAmB,EAAEY,QAAQ,CAAC,CAAD,CADxB;AAELM,IAAAA,OAAO,EAAEN,QAAQ,CAAC,CAAD,CAFZ;AAGLR,IAAAA,aAAa,EAAEQ,QAAQ,CAAC,CAAD,CAHlB;AAILP,IAAAA,aAAa,EAAEO,QAAQ,CAAC,CAAD,CAJlB;AAKLT,IAAAA,OAAO,EAAES,QAAQ,CAAC,CAAD;AALZ,GAAP;AAOD,CAVD;;AAYA,eAAehB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\n\nconst campaignShow = (props) => {\n  console.log(props.minimumContribution);\n\n  const renderCards = () => {\n    const {\n      bbalance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      aproversCount,\n    } = props;\n\n    const item = [\n      {\n        header: manager,\n        meta: \"Address of Mannager\",\n        description:\n          \"The mannager created this campaign and can create requests to withdraw money\",\n      },\n    ];\n\n    return <Card.Group items={item} />;\n  };\n\n  return (\n    <Layout>\n      <h1>Campaign Show</h1>\n    </Layout>\n  );\n};\n\ncampaignShow.getInitialProps = async (ctx) => {\n  let campaign = Campaign(ctx.query.address);\n  campaign = await campaign.methods.getSummary().call();\n  return {\n    minimumContribution: campaign[0],\n    balance: campaign[1],\n    requestsCount: campaign[2],\n    aproversCount: campaign[3],\n    manager: campaign[4],\n  };\n};\n\nexport default campaignShow;\n"]},"metadata":{},"sourceType":"module"}