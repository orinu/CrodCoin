{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/orinahum/Dropbox/project/solidity/kickstart/pages/campaigns/show.js\";\nimport React, { useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\n\nconst campaignShow = props => {\n  const renderCards = () => {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      aproversCount\n    } = props;\n    const item = [{\n      header: manager,\n      meta: \"Address of Mannager\",\n      description: \"The mannager created this campaign and can create requests to withdraw money\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute at least this much wei to become an approver\"\n    }, {\n      header: requestsCount,\n      meta: \"Number of Requests\",\n      description: \"A request tries to withdraw money from the contract. Request must be approved by approvers\"\n    }, {\n      header: aproversCount,\n      meta: \"Number of Approvers\",\n      description: \"Number of people who have already donated to this campaign\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign Balance (ether)\",\n      description: \"The balance is how much money this campaign hs left to use\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 10,\n        children: renderCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: /*#__PURE__*/_jsxDEV(ContributeForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\ncampaignShow.getInitialProps = async ctx => {\n  const address = Campaign(ctx.query.address);\n  const campaign = await address.methods.getSummary().call();\n  return {\n    address,\n    minimumContribution: campaign[0],\n    balance: campaign[1],\n    requestsCount: campaign[2],\n    aproversCount: campaign[3],\n    manager: campaign[4]\n  };\n};\n\nexport default campaignShow;","map":{"version":3,"sources":["/Users/orinahum/Dropbox/project/solidity/kickstart/pages/campaigns/show.js"],"names":["React","useEffect","Layout","Card","Grid","Campaign","web3","ContributeForm","campaignShow","props","renderCards","balance","manager","minimumContribution","requestsCount","aproversCount","item","header","meta","description","style","overflowWrap","utils","fromWei","getInitialProps","ctx","address","query","campaign","methods","getSummary","call"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,mBAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMFN,KANJ;AAQA,UAAMO,IAAI,GAAG,CACX;AACEC,MAAAA,MAAM,EAAEL,OADV;AAEEM,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT,8EAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADW,EAQX;AACEJ,MAAAA,MAAM,EAAEJ,mBADV;AAEEK,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KARW,EAcX;AACEF,MAAAA,MAAM,EAAEH,aADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAdW,EAoBX;AACEF,MAAAA,MAAM,EAAEF,aADV;AAEEG,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KApBW,EA0BX;AACEF,MAAAA,MAAM,EAAEX,IAAI,CAACgB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADV;AAEEO,MAAAA,IAAI,EAAE,0BAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KA1BW,CAAb;AAkCA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA5CD;;AA8CA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA,kBAAyBN,WAAW;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1DD;;AA4DAF,YAAY,CAACgB,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC5C,QAAMC,OAAO,GAAGrB,QAAQ,CAACoB,GAAG,CAACE,KAAJ,CAAUD,OAAX,CAAxB;AACA,QAAME,QAAQ,GAAG,MAAMF,OAAO,CAACG,OAAR,CAAgBC,UAAhB,GAA6BC,IAA7B,EAAvB;AACA,SAAO;AACLL,IAAAA,OADK;AAELb,IAAAA,mBAAmB,EAAEe,QAAQ,CAAC,CAAD,CAFxB;AAGLjB,IAAAA,OAAO,EAAEiB,QAAQ,CAAC,CAAD,CAHZ;AAILd,IAAAA,aAAa,EAAEc,QAAQ,CAAC,CAAD,CAJlB;AAKLb,IAAAA,aAAa,EAAEa,QAAQ,CAAC,CAAD,CALlB;AAMLhB,IAAAA,OAAO,EAAEgB,QAAQ,CAAC,CAAD;AANZ,GAAP;AAQD,CAXD;;AAaA,eAAepB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\n\nconst campaignShow = (props) => {\n  const renderCards = () => {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      aproversCount,\n    } = props;\n\n    const item = [\n      {\n        header: manager,\n        meta: \"Address of Mannager\",\n        description:\n          \"The mannager created this campaign and can create requests to withdraw money\",\n        style: { overflowWrap: \"break-word\" },\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute at least this much wei to become an approver\",\n      },\n      {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description:\n          \"A request tries to withdraw money from the contract. Request must be approved by approvers\",\n      },\n      {\n        header: aproversCount,\n        meta: \"Number of Approvers\",\n        description:\n          \"Number of people who have already donated to this campaign\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description:\n          \"The balance is how much money this campaign hs left to use\",\n      },\n    ];\n\n    return <Card.Group items={item} />;\n  };\n\n  return (\n    <Layout>\n      <h1>Campaign Show</h1>\n      <Grid>\n        <Grid.Column width={10}>{renderCards()}</Grid.Column>\n        <Grid.Column width={6}>\n          <ContributeForm />\n        </Grid.Column>\n      </Grid>\n    </Layout>\n  );\n};\n\ncampaignShow.getInitialProps = async (ctx) => {\n  const address = Campaign(ctx.query.address);\n  const campaign = await address.methods.getSummary().call();\n  return {\n    address,\n    minimumContribution: campaign[0],\n    balance: campaign[1],\n    requestsCount: campaign[2],\n    aproversCount: campaign[3],\n    manager: campaign[4],\n  };\n};\n\nexport default campaignShow;\n"]},"metadata":{},"sourceType":"module"}